"use strict";
// Copyright IBM Corp. 2017,2018. All Rights Reserved.
// Node module: @loopback/context
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
Object.defineProperty(exports, "__esModule", { value: true });
const binding_key_1 = require("./binding-key");
/**
 * Resolver for configurations of bindings
 */
class DefaultConfigurationResolver {
    constructor(context) {
        this.context = context;
    }
    getConfigAsValueOrPromise(key, configPath, resolutionOptions) {
        configPath = configPath || '';
        const configKey = configBindingKeyFor(key, configPath);
        const options = Object.assign({ optional: true }, resolutionOptions);
        return this.context.getValueOrPromise(configKey, options);
    }
}
exports.DefaultConfigurationResolver = DefaultConfigurationResolver;
/**
 * Create binding key for configuration of the binding
 * @param key - Binding key for the target binding
 * @param configPath - Property path for the configuration
 */
function configBindingKeyFor(key, configPath) {
    return binding_key_1.BindingKey.create(binding_key_1.BindingKey.buildKeyForConfig(key).toString(), configPath);
}
exports.configBindingKeyFor = configBindingKeyFor;
//# sourceMappingURL=binding-config.js.map