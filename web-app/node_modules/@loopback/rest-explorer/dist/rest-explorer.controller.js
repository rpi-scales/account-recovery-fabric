"use strict";
// Copyright IBM Corp. 2018,2019. All Rights Reserved.
// Node module: @loopback/rest-explorer
// This file is licensed under the MIT License.
// License text available at https://opensource.org/licenses/MIT
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
const context_1 = require("@loopback/context");
const rest_1 = require("@loopback/rest");
const ejs = require("ejs");
const fs = require("fs");
const path = require("path");
// TODO(bajtos) Allow users to customize the template
const indexHtml = path.resolve(__dirname, '../templates/index.html.ejs');
const template = fs.readFileSync(indexHtml, 'utf-8');
const templateFn = ejs.compile(template);
let ExplorerController = class ExplorerController {
    constructor(restConfig = {}, serverBasePath, request, response) {
        this.serverBasePath = serverBasePath;
        this.request = request;
        this.response = response;
        this.openApiSpecUrl = this.getOpenApiSpecUrl(restConfig);
    }
    indexRedirect() {
        const url = this.request.originalUrl || this.request.url;
        this.response.redirect(301, url + '/');
    }
    index() {
        let openApiSpecUrl = this.openApiSpecUrl;
        // baseURL is composed from mountPath and basePath
        // OpenAPI endpoints ignore basePath but do honor mountPath
        let rootPath = this.request.baseUrl;
        if (this.serverBasePath &&
            this.serverBasePath !== '/' &&
            rootPath.endsWith(this.serverBasePath)) {
            rootPath = rootPath.slice(0, -this.serverBasePath.length);
        }
        if (rootPath && rootPath !== '/') {
            openApiSpecUrl = rootPath + openApiSpecUrl;
        }
        const data = {
            openApiSpecUrl,
        };
        const homePage = templateFn(data);
        this.response
            .status(200)
            .contentType('text/html')
            .send(homePage);
    }
    getOpenApiSpecUrl(restConfig) {
        const openApiConfig = restConfig.openApiSpec || {};
        const endpointMapping = openApiConfig.endpointMapping || {};
        const endpoint = Object.keys(endpointMapping).find(k => isOpenApiV3Json(endpointMapping[k]));
        return endpoint || '/openapi.json';
    }
};
ExplorerController = __decorate([
    __param(0, context_1.inject(rest_1.RestBindings.CONFIG, { optional: true })),
    __param(1, context_1.inject(rest_1.RestBindings.BASE_PATH)),
    __param(2, context_1.inject(rest_1.RestBindings.Http.REQUEST)),
    __param(3, context_1.inject(rest_1.RestBindings.Http.RESPONSE)),
    __metadata("design:paramtypes", [Object, String, Object, Object])
], ExplorerController);
exports.ExplorerController = ExplorerController;
function isOpenApiV3Json(mapping) {
    return mapping.version === '3.0.0' && mapping.format === 'json';
}
//# sourceMappingURL=rest-explorer.controller.js.map